name: "master"

on:
  workflow_dispatch:
  push:
    branches: [master]
    paths:
      - "*"

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Check env
        run: echo "address is ${{ vars.REMOTE_SERVER_USERNAME }}@${{ vars.REMOTE_SERVER_ADDRESS }}"

      - name: Build Docker image
        run: docker build -t spider-vpn-dashboard:latest .

      - name: Save Docker image as tar file
        run: docker save -o spider-vpn-dashboard.tar spider-vpn-dashboard:latest

      - name: Transfer Docker image to server
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          scp -o StrictHostKeyChecking=no spider-vpn-dashboard.tar ${{vars.REMOTE_SERVER_USERNAME}}@${{vars.REMOTE_SERVER_ADDRESS}}:${{ secrets.REMOTE_SERVER_PATH }}

      - name: Load Docker image on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ vars.REMOTE_SERVER_USERNAME }}@${{ vars.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
          docker network create spider-vpn-network && docker load -i ${{ secrets.REMOTE_SERVER_PATH }}/spider-vpn-dashboard.tar
          ENDSSH

      - name: Transfer Docker Compose file to remote server
        run: |
          scp -o StrictHostKeyChecking=no .github/docker-compose.yml ${{ vars.REMOTE_SERVER_USERNAME }}@${{ vars.REMOTE_SERVER_ADDRESS }}:${{ secrets.REMOTE_SERVER_PATH }}

      - name: Deploy Docker containers using Docker Compose on remote server
        run: |
          ssh -o StrictHostKeyChecking=no ${{ vars.REMOTE_SERVER_USERNAME }}@${{ vars.REMOTE_SERVER_ADDRESS }} << 'ENDSSH'
          docker compose -f ${{ secrets.REMOTE_SERVER_PATH }}/docker-compose.yml up -d
          ENDSSH
